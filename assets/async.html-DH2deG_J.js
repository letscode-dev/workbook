import{_ as p,r as o,o as c,c as t,d as e,w as n,b as s,a as i,e as a}from"./app-DzKhGkmf.js";const r={},A=s("h1",{id:"async-function-es2017",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#async-function-es2017"},[s("span",null,"Async Function (ES2017)")])],-1),y=s("h3",{id:"объявление",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#объявление"},[s("span",null,"Объявление")])],-1),d=s("div",{class:"language-javascript","data-highlighter":"prismjs","data-ext":"js","data-title":"js"},[s("pre",{class:"shiki one-light vp-code",style:{"background-color":"#FAFAFA",color:"#383A42 language-javascript"}},[s("code",null,[s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A0A1A7","font-style":"italic"}},"// Стрелочная")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A626A4"}},"const"),s("span",{style:{color:"#4078F2"}}," foo"),s("span",{style:{color:"#0184BC"}}," ="),s("span",{style:{color:"#A626A4"}}," async"),s("span",{style:{color:"#383A42"}}," () "),s("span",{style:{color:"#A626A4"}},"=>"),s("span",{style:{color:"#383A42"}}," {")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A626A4"}},"    const"),s("span",{style:{color:"#986801"}}," a"),s("span",{style:{color:"#0184BC"}}," ="),s("span",{style:{color:"#A626A4"}}," await"),s("span",{style:{color:"#4078F2"}}," AsyncFunction"),s("span",{style:{color:"#383A42"}},"();")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#383A42"}},"};")])])])])],-1),h=s("div",{class:"language-javascript","data-highlighter":"prismjs","data-ext":"js","data-title":"js"},[s("pre",{class:"shiki one-light vp-code",style:{"background-color":"#FAFAFA",color:"#383A42 language-javascript"}},[s("code",null,[s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A0A1A7","font-style":"italic"}},"// Обычная")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A626A4"}},"async"),s("span",{style:{color:"#A626A4"}}," function"),s("span",{style:{color:"#4078F2"}}," foo"),s("span",{style:{color:"#383A42"}},"() {")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A626A4"}},"    const"),s("span",{style:{color:"#986801"}}," a"),s("span",{style:{color:"#0184BC"}}," ="),s("span",{style:{color:"#A626A4"}}," await"),s("span",{style:{color:"#4078F2"}}," AsyncFunction"),s("span",{style:{color:"#383A42"}},"();  ")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#383A42"}},"}")])])])])],-1),g=s("div",{class:"language-javascript","data-highlighter":"prismjs","data-ext":"js","data-title":"js"},[s("pre",{class:"shiki one-light vp-code",style:{"background-color":"#FAFAFA",color:"#383A42 language-javascript"}},[s("code",null,[s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A0A1A7","font-style":"italic"}},"// Стрелочная")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#383A42"}},"("),s("span",{style:{color:"#A626A4"}},"async"),s("span",{style:{color:"#383A42"}}," () "),s("span",{style:{color:"#A626A4"}},"=>"),s("span",{style:{color:"#383A42"}}," {")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A626A4"}},"    const"),s("span",{style:{color:"#986801"}}," a"),s("span",{style:{color:"#0184BC"}}," ="),s("span",{style:{color:"#A626A4"}}," await"),s("span",{style:{color:"#4078F2"}}," AsyncFunction"),s("span",{style:{color:"#383A42"}},"();")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#383A42"}},"})()")])])])])],-1),u=s("div",{class:"language-javascript","data-highlighter":"prismjs","data-ext":"js","data-title":"js"},[s("pre",{class:"shiki one-light vp-code",style:{"background-color":"#FAFAFA",color:"#383A42 language-javascript"}},[s("code",null,[s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A0A1A7","font-style":"italic"}},"// Обычная")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#383A42"}},"("),s("span",{style:{color:"#A626A4"}},"async"),s("span",{style:{color:"#A626A4"}}," function"),s("span",{style:{color:"#383A42"}},"() {")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#A626A4"}},"    const"),s("span",{style:{color:"#986801"}}," a"),s("span",{style:{color:"#0184BC"}}," ="),s("span",{style:{color:"#A626A4"}}," await"),s("span",{style:{color:"#4078F2"}}," AsyncFunction"),s("span",{style:{color:"#383A42"}},"();")])]),a(`
`),s("span",{class:"line"},[s("span",{class:"line"},[s("span",{style:{color:"#383A42"}},"})();")])])])])],-1),F=i(`<h3 id="описание" tabindex="-1"><a class="header-anchor" href="#описание"><span>Описание</span></a></h3><ul><li><code>Async Function</code> - асинхронная функция (<code>Promise</code> + <code>Generator</code>)</li><li>Асинхронная функция возвращает <u>Promise</u>, для получения значения используется then</li><li>await дожидается выполнения <u>Promise</u>, вытаскивает значение и возвращает его</li><li>await можно использовать только внутри асинхронной функции</li><li>await необязательно ставить перед вызовом асинхронной фунцкии. это может быть любая функция, возвращающая <u>Promise</u></li></ul><h3 id="примеры" tabindex="-1"><a class="header-anchor" href="#примеры"><span>Примеры</span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// AJAX-запрос</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#4078F2;"> getResource</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> async</span><span style="color:#383A42;"> (url) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">    const</span><span style="color:#986801;"> res</span><span style="color:#0184BC;"> =</span><span style="color:#A626A4;"> await</span><span style="color:#4078F2;"> fetch</span><span style="color:#383A42;">(url);</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">    return</span><span style="color:#A626A4;"> await</span><span style="color:#383A42;"> res.</span><span style="color:#4078F2;">json</span><span style="color:#383A42;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">getResource</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;https://swapi.co/api/people/1/&#39;</span><span style="color:#383A42;">)</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">    .</span><span style="color:#4078F2;">then</span><span style="color:#383A42;">(body </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(body))</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Асинхронная функция</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">async</span><span style="color:#A626A4;"> function</span><span style="color:#4078F2;"> getUser</span><span style="color:#383A42;">(id) {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">    return</span><span style="color:#383A42;"> { </span><span style="color:#E45649;">id</span><span style="color:#0184BC;">:</span><span style="color:#986801;">1</span><span style="color:#383A42;"> };   </span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">async</span><span style="color:#A626A4;"> function</span><span style="color:#4078F2;"> main</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">    let</span><span style="color:#383A42;"> user </span><span style="color:#0184BC;">=</span><span style="color:#A626A4;"> await</span><span style="color:#4078F2;"> getUser</span><span style="color:#383A42;">(</span><span style="color:#986801;">1</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">    console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(user);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">main</span><span style="color:#383A42;">();</span></span></span></code></pre></div><h3 id="использование-в-классах-и-объектах" tabindex="-1"><a class="header-anchor" href="#использование-в-классах-и-объектах"><span>Использование в классах и объектах</span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Свойство объекта</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> obj</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">    getUser</span><span style="color:#0184BC;">:</span><span style="color:#A626A4;"> async</span><span style="color:#A626A4;"> function</span><span style="color:#383A42;">(id) {</span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">        //</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Метод объекта</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> obj</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">    async</span><span style="color:#4078F2;"> getName</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">        return</span><span style="color:#4078F2;"> fetch</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;https://www.example.com&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Класс</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">class</span><span style="color:#C18401;"> Obj</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">    async</span><span style="color:#4078F2;"> getResource</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">        return</span><span style="color:#4078F2;"> fetch</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;https://www.example.com&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div>`,9);function v(j,m){const l=o("v-two");return c(),t("div",null,[A,y,e(l,null,{first:n(()=>[d]),last:n(()=>[h]),_:1}),e(l,null,{first:n(()=>[g]),last:n(()=>[u]),_:1}),F])}const _=p(r,[["render",v],["__file","async.html.vue"]]),k=JSON.parse('{"path":"/themes/learn/js/async/async.html","title":"Async Function (ES2017)","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Объявление","slug":"объявление","link":"#объявление","children":[]},{"level":3,"title":"Описание","slug":"описание","link":"#описание","children":[]},{"level":3,"title":"Примеры","slug":"примеры","link":"#примеры","children":[]},{"level":3,"title":"Использование в классах и объектах","slug":"использование-в-классах-и-объектах","link":"#использование-в-классах-и-объектах","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/js/async/async.md"}');export{_ as comp,k as data};
