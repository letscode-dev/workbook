import{_ as s,o as n,c as a,a as p}from"./app-BKXFRN2A.js";const t={},e=p(`<h1 id="axios" tabindex="-1"><a class="header-anchor" href="#axios"><span>AXIOS</span></a></h1><p><a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">Axios</a></p><h3 id="axios-1" tabindex="-1"><a class="header-anchor" href="#axios-1"><span>Axios</span></a></h3><div class="language-html" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre></div><h4 id="get-запрос-с-возвратом-одного-значения" tabindex="-1"><a class="header-anchor" href="#get-запрос-с-возвратом-одного-значения"><span>GET-запрос с возвратом одного значения</span></a></h4><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;script.php&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Hi&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><div class="language-php" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Hi&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre></div><h4 id="get-запрос-с-возвратом-нескольких-значении-array" tabindex="-1"><a class="header-anchor" href="#get-запрос-с-возвратом-нескольких-значении-array"><span>GET-запрос с возвратом нескольких значений (<code>array</code>)</span></a></h4><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;script.php&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;Jack&#39;, 25]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><div class="language-php" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line">    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Jack&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token variable">$json</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre></div><h4 id="get-запрос-с-возвратом-нескольких-значении-object" tabindex="-1"><a class="header-anchor" href="#get-запрос-с-возвратом-нескольких-значении-object"><span>GET-запрос с возвратом нескольких значений (<code>object</code>)</span></a></h4><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;script.php&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &quot;Jack&quot;, age: 25}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><div class="language-php" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line">    <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;name&quot;</span> <span class="token operator">=&gt;</span> <span class="token string double-quoted-string">&quot;Jack&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;age&quot;</span> <span class="token operator">=&gt;</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token variable">$json</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre></div><h4 id="post-запрос" tabindex="-1"><a class="header-anchor" href="#post-запрос"><span>POST-запрос</span></a></h4><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;script.php&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;25&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><div class="language-php" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line">    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;php://input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$decoded</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token variable">$decoded</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre></div><h3 id="отправка-сообщения-на-почту" tabindex="-1"><a class="header-anchor" href="#отправка-сообщения-на-почту"><span>Отправка сообщения на почту</span></a></h3><div class="language-php" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="language-php"><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line">    <span class="token variable">$to</span>      <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;user1@example.com, user2@example.com&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Получатель или получатели</span></span>
<span class="line">    <span class="token variable">$subject</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Письмо с сайта&#39;</span><span class="token punctuation">;</span>                       <span class="token comment">// Тема письма</span></span>
<span class="line">    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Сообщение&#39;</span><span class="token punctuation">;</span>                            <span class="token comment">// Сообщение</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">mail</span><span class="token punctuation">(</span><span class="token variable">$to</span><span class="token punctuation">,</span> <span class="token variable">$subject</span><span class="token punctuation">,</span> <span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$email</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Письмо успешно отправлено!&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;Письмо не отправлено!&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre></div>`,18),o=[e];function c(l,i){return n(),a("div",null,o)}const r=s(t,[["render",c],["__file","axios.html.vue"]]),k=JSON.parse('{"path":"/themes/learn/js/async/axios.html","title":"AXIOS","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Axios","slug":"axios-1","link":"#axios-1","children":[]},{"level":3,"title":"Отправка сообщения на почту","slug":"отправка-сообщения-на-почту","link":"#отправка-сообщения-на-почту","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/js/async/axios.md"}');export{r as comp,k as data};
