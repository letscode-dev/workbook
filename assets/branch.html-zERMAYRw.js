import{_ as a,o as s,c as n,a as e}from"./app-U-fMkcWC.js";const c={},t=e(`<h1 id="работа-с-ветками-и-коммитами" tabindex="-1"><a class="header-anchor" href="#работа-с-ветками-и-коммитами"><span>Работа с ветками и коммитами</span></a></h1><h3 id="branch-checkout" tabindex="-1"><a class="header-anchor" href="#branch-checkout"><span><code>branch</code> <code>checkout</code></span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> branch                    <span class="token comment"># Список веток с указанием текущей</span></span>
<span class="line"><span class="token function">git</span> branch NameBranch         <span class="token comment"># Создание новой ветки</span></span>
<span class="line"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> NameBranch    <span class="token comment"># Создание новой ветки</span></span>
<span class="line"><span class="token function">git</span> checkout NameBranch       <span class="token comment"># Переход на ветку</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-m</span> NewName         <span class="token comment"># Переименование локальной ветки (если на текущей ветке)</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-m</span> OldName NewName <span class="token comment"># Переименование локальной ветки (если на другой ветке)</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-d</span> NameBranch      <span class="token comment"># Удаление ветки (после мерджа)</span></span>
<span class="line"><span class="token function">git</span> branch <span class="token parameter variable">-D</span> NameBranch      <span class="token comment"># Удаление ветки (тупиковая ветвь)</span></span>
<span class="line"><span class="token function">git</span> push origin <span class="token parameter variable">-d</span> NameBranch <span class="token comment"># Удаление ветки из удаленного репозитория</span></span>
<span class="line"><span class="token function">git</span> push origin :NameBranch   <span class="token comment"># Удаление ветки из удаленного репозитория</span></span>
<span class="line"></span></code></pre></div><h3 id="log-cherry-pick" tabindex="-1"><a class="header-anchor" href="#log-cherry-pick"><span><code>log</code> <code>cherry-pick</code></span></a></h3><ul><li><code>cherry-pick</code> позволяет взять коммит с <u>Ветки1</u> и перенести его на <u>Ветку2</u></li><li>Вызывается из ветки, в которую нужно добавить коммиты</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> log                    <span class="token comment"># Информация по коммитам</span></span>
<span class="line"><span class="token function">git</span> cherry-pick HashCommit <span class="token comment"># Взять изменения определенного коммита</span></span>
<span class="line"></span></code></pre></div><h3 id="stash" tabindex="-1"><a class="header-anchor" href="#stash"><span><code>stash</code></span></a></h3><ul><li>Сменить ветку, не теряя текущих несохраненных изменений</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> stash       <span class="token comment"># Сохранение неподтвержденных изменений в отдельном хранилище</span></span>
<span class="line"><span class="token function">git</span> stash <span class="token parameter variable">-u</span>    <span class="token comment"># Сохранение неподтвержденных изменений, включая файлы НЕ в Индексе</span></span>
<span class="line"><span class="token function">git</span> stash pop   <span class="token comment"># Применение отложенных изменений (происходит удаление из набора)</span></span>
<span class="line"><span class="token function">git</span> stash apply <span class="token comment"># Применение отложенных изменений (НЕ происходит удаление из набора)</span></span>
<span class="line"><span class="token function">git</span> stash <span class="token function">clear</span> <span class="token comment"># Удалить все наборы отложенных изменений</span></span>
<span class="line"></span></code></pre></div>`,9),p=[t];function l(o,i){return s(),n("div",null,p)}const h=a(c,[["render",l],["__file","branch.html.vue"]]),m=JSON.parse('{"path":"/themes/learn/git/themes/branch.html","title":"Работа с ветками и коммитами","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"branch checkout","slug":"branch-checkout","link":"#branch-checkout","children":[]},{"level":3,"title":"log cherry-pick","slug":"log-cherry-pick","link":"#log-cherry-pick","children":[]},{"level":3,"title":"stash","slug":"stash","link":"#stash","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/git/themes/branch.md"}');export{h as comp,m as data};
