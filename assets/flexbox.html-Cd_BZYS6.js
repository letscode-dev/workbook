import{_ as l,r as c,o,c as i,d as e,w as p,a,b as s,e as n}from"./app-BS_Q0RPl.js";const r="/workbook/assets/flex-axis-Bg-88sBg.jpg",u="/workbook/assets/flex-direction-CAmctFRM.jpg",d="/workbook/assets/flex-wrap-DuVX0eW3.jpg",k="/workbook/assets/justify-content-CoNxmC1T.jpg",h="/workbook/assets/align-items-q4QLr5ku.jpg",g="/workbook/assets/align-content-DXviqGLI.jpg",m={},x=a('<h1 id="flexbox" tabindex="-1"><a class="header-anchor" href="#flexbox"><span>Flexbox</span></a></h1><ul><li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener noreferrer">A Complete Guide to Flexbox</a></li><li><a href="https://flexboxfroggy.com/#ru" target="_blank" rel="noopener noreferrer">Игра Flexbox Froggy</a></li><li><a href="https://github.com/philipwalton/flexbugs" target="_blank" rel="noopener noreferrer">Flexbugs</a></li><li><a href="https://www.outpan.com/app/1b970b008f/flexbox-playground" target="_blank" rel="noopener noreferrer">Flexbox Playground</a></li></ul><h3 id="информация" tabindex="-1"><a class="header-anchor" href="#информация"><span>Информация</span></a></h3><img src="'+r+`" style="width:800px;"><ul><li><code>Main Axis</code> - главная ось (по горизонтали)</li><li><code>Cross Axis</code> - второстепенная ось (по вертикали)</li></ul><h3 id="flex-контенер" tabindex="-1"><a class="header-anchor" href="#flex-контенер"><span>Flex-контенер</span></a></h3><h4 id="display" tabindex="-1"><a class="header-anchor" href="#display"><span><code>display</code></span></a></h4><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-container</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>         <span class="token comment">/* Задание flex */</span></span>
<span class="line">	<span class="token property">display</span><span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span>  <span class="token comment">/* Задание inline-flex */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="gap" tabindex="-1"><a class="header-anchor" href="#gap"><span><code>gap</code></span></a></h4><ul><li>Задает расстояние между flex-элементами</li></ul><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-container</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="flex-flow-row-nowrap" tabindex="-1"><a class="header-anchor" href="#flex-flow-row-nowrap"><span><code>flex-flow: row nowrap</code></span></a></h4><ul><li>Рекомендуется использовать flex-flow, a не отдельные свойства (работает быстрее)</li></ul>`,13),f=s("h4",{id:"flex-direction-row",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#flex-direction-row"},[s("span",null,[s("code",null,"flex-direction: row")])])],-1),y=s("ul",null,[s("li",null,"Задаёт направление основных осей в контейнере")],-1),_=s("img",{src:u,style:{width:"800px"}},null,-1),b=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},".flex-container"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Расположение блоков по горизонтали (по умолчанию) */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-direction"),s("span",{class:"token punctuation"},":"),n(" row"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Расположение блоков по горизонтали (реверсионно) */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-direction"),s("span",{class:"token punctuation"},":"),n(" row-reverse"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Расположение блоков по вертикали */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-direction"),s("span",{class:"token punctuation"},":"),n(" column"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Расположение блоков по вертикали (реверсионно) */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-direction"),s("span",{class:"token punctuation"},":"),n(" column-reverse"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),w=s("h4",{id:"flex-wrap-nowrap",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#flex-wrap-nowrap"},[s("span",null,[s("code",null,"flex-wrap: nowrap")])])],-1),v=s("ul",null,[s("li",null,"Задает перенос флексов")],-1),j=s("img",{src:d,style:{width:"800px"}},null,-1),F=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},".flex-container"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Флексы выстраиваются в одну линию */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-wrap"),s("span",{class:"token punctuation"},":"),n(" nowrap"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Флексы выстраиваются в несколько строк */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-wrap"),s("span",{class:"token punctuation"},":"),n(" wrap"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Флексы выстраиваются в несколько строк реверсивно */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-wrap"),s("span",{class:"token punctuation"},":"),n(" wrap-reverse"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),C=a('<h4 id="justify-content-flex-start" tabindex="-1"><a class="header-anchor" href="#justify-content-flex-start"><span><code>justify-content: flex-start</code></span></a></h4><ul><li>Управляет размещением элемента вдоль главной оси (по горизонтали)</li></ul><img src="'+k+`" style="width:800px;"><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-container</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">/* Флексы прижаты к началу строки */</span></span>
<span class="line">	<span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы прижаты к концу строки */</span></span>
<span class="line">	<span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются по центру строки */</span></span>
<span class="line">	<span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы равномерно располагаются с одинаковыми расстояниями между ними (первый и последний элемент прижимаются к краям контейнера) */</span></span>
<span class="line">	<span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы равномерно располагаются с одинаковыми расстояниями вокруг них (первый и последний элемент не прижимаются к краям контейнера) */</span></span>
<span class="line">	<span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы распределяются таким образом, чтобы расстояние между любыми двумя элементами (и расстояние до краев) было одинаковым */</span></span>
<span class="line">	<span class="token property">justify-content</span><span class="token punctuation">:</span> space-evenly<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="align-items-stretch" tabindex="-1"><a class="header-anchor" href="#align-items-stretch"><span><code>align-items: stretch</code></span></a></h4><ul><li>Управляет размещением элемента вдоль второстепенной оси (по вертикали)</li></ul><img src="`+h+`" style="width:800px;"><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-container</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются в начале поперечной оси контейнера */</span></span>
<span class="line">	<span class="token property">align-items</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются в конце поперечной оси контейнера */</span></span>
<span class="line">	<span class="token property">align-items</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются по линии поперечной оси */</span></span>
<span class="line">	<span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы растягиваются таким образом, чтобы занять всё доступное пространство контейнера */</span></span>
<span class="line">	<span class="token property">align-items</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются по их базовой линии (по нижней части параграфа) */</span></span>
<span class="line">	<span class="token property">align-items</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="align-content-stretch" tabindex="-1"><a class="header-anchor" href="#align-content-stretch"><span><code>align-content: stretch</code></span></a></h4><ul><li>Выравнивание многострочных элементов по вертикали (указывает, как несколько рядов должны отделяться друг от друга)</li><li>align-content отвечает за расстояние между рядами, в то время как align-items отвечает за то, как элементы в целом будут выровнены в контейнере. Когда только один ряд, align-content ни на что не влияет</li></ul><img src="`+g+`" style="width:800px;"><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-container</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">/* Флексы располагаются в начале поперечной оси. Каждая следующая строка идёт вровень с предыдущей */</span></span>
<span class="line">	<span class="token property">align-content</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы располагаются начиная с конца поперечной оси. Каждая предыдущая строка идёт вровень со следующей */</span></span>
<span class="line">	<span class="token property">align-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы располагаются по центру контейнера */</span></span>
<span class="line">	<span class="token property">align-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы равномерно располагаются с одинаковыми расстояниями между ними (первый и последний элемент прижимаются к краям контейнера) */</span></span>
<span class="line">	<span class="token property">align-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы равномерно располагаются с одинаковыми расстояниями вокруг них (первый и последний элемент не прижимаются к краям контейнера) */</span></span>
<span class="line">	<span class="token property">align-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы растягиваются, заполняя контейнер равномерно (по умолчанию) */</span></span>
<span class="line">	<span class="token property">align-content</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="flex-элемент" tabindex="-1"><a class="header-anchor" href="#flex-элемент"><span>Flex-элемент</span></a></h3><h4 id="flex-0-1-auto" tabindex="-1"><a class="header-anchor" href="#flex-0-1-auto"><span><code>flex: 0 1 auto</code></span></a></h4><ul><li>Блоки растягиваются на всю ширину контейнера (<code>flex = flex-grow = 1</code>)</li></ul><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-element</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">flex</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line">	<span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span>
<span class="line">	<span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-element</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">flex</span><span class="token punctuation">:</span> 1 1 auto<span class="token punctuation">;</span>  <span class="token comment">/* Занимают равное место, пока влезают */</span></span>
<span class="line">	<span class="token property">flex</span><span class="token punctuation">:</span> 1 1 250px<span class="token punctuation">;</span> <span class="token comment">/* Указали фиксированную минимальную ширину */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,17),S=s("h4",{id:"flex-grow-0",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#flex-grow-0"},[s("span",null,[s("code",null,"flex-grow: 0")])])],-1),N=s("ul",null,[s("li",null,"Определяет для flex-элемента возможность растягиваться по ширине")],-1),A=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},".flex-element"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-grow"),s("span",{class:"token punctuation"},":"),n(" 2"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token comment"},"/* Если для всех flex-item, то это равные 2 части от container-flex (заполнят всю ширину блока) */")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),B=s("h4",{id:"flex-shrink-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#flex-shrink-1"},[s("span",null,[s("code",null,"flex-shrink: 1")])])],-1),V=s("ul",null,[s("li",null,"Определяет возможность блока ужиматься при необходимости"),s("li",null,"Необходимо задать ширину элемента")],-1),T=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},".flex-element"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-shrink"),s("span",{class:"token punctuation"},":"),n(" 2"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),q=s("h4",{id:"flex-basis-auto",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#flex-basis-auto"},[s("span",null,[s("code",null,"flex-basis: auto")])])],-1),D=s("ul",null,[s("li",null,"Базовый размер отдельно взятого блока. Задает размер элемента вдоль главной оси"),s("li",null,[n("При "),s("code",null,"flex-direction: row"),n(" соответствует CSS-свойству "),s("code",null,"width")]),s("li",null,[n("При "),s("code",null,"flex-direction: column"),n(" соответствует CSS-свойству "),s("code",null,"height")])],-1),G=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},".flex-element"),n(),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-basis"),s("span",{class:"token punctuation"},":"),n(" 100px"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token comment"},"/* Вместо width */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-basis"),s("span",{class:"token punctuation"},":"),n(" 0"),s("span",{class:"token punctuation"},";"),n("     "),s("span",{class:"token comment"},"/* Дополнительное пространство вокруг контента не учитывается */")]),n(`
`),s("span",{class:"line"},[n("	"),s("span",{class:"token property"},"flex-basis"),s("span",{class:"token punctuation"},":"),n(" auto"),s("span",{class:"token punctuation"},";"),n("  "),s("span",{class:"token comment"},"/* Дополнительное пространство распределяется на основе его значения flex-grow */")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),L=a(`<h4 id="order-0" tabindex="-1"><a class="header-anchor" href="#order-0"><span><code>order: 0</code></span></a></h4><ul><li>Определяет порядок вывода флексов</li></ul><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-element</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">order</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token comment">/* По умолчанию у всех элементов */</span></span>
<span class="line">	<span class="token property">order</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>  <span class="token comment">/* Элемент выводится третьим по порядку */</span></span>
<span class="line">	<span class="token property">order</span><span class="token punctuation">:</span> -1<span class="token punctuation">;</span> <span class="token comment">/* Элемент выводится первым по порядку */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h4 id="align-self-auto" tabindex="-1"><a class="header-anchor" href="#align-self-auto"><span><code>align-self: auto</code></span></a></h4><ul><li>Переопределяет значение свойства align-items (позволяет вручную управлять выравниванием конкретного элемента)</li></ul><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-element</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">/* Выравнивать как указано у контейнера (по умолчанию) */</span></span>
<span class="line">	<span class="token property">align-self</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются в начале поперечной оси контейнера */</span></span>
<span class="line">	<span class="token property">align-self</span><span class="token punctuation">:</span> flex-start<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются в конце поперечной оси контейнера */</span></span>
<span class="line">	<span class="token property">align-self</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются по линии поперечной оси */</span></span>
<span class="line">	<span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы растягиваются таким образом, чтобы занять всё доступное пространство контейнера */</span></span>
<span class="line">	<span class="token property">align-self</span><span class="token punctuation">:</span> stretch<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">/* Флексы выравниваются по их базовой линии (по нижней части параграфа) */</span></span>
<span class="line">	<span class="token property">align-self</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="поведение-margin" tabindex="-1"><a class="header-anchor" href="#поведение-margin"><span>Поведение <code>margin</code></span></a></h3><ul><li>Центрирование элемента</li></ul><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.flex-element</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token comment">/* Центрирует один блок по горизонтали и вертикали */</span></span>
<span class="line">	<span class="token property">margin-left</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>   <span class="token comment">/* Выравнивает блок по правому краю, а остальные блоки по левому */</span></span>
<span class="line">	<span class="token property">margin-top</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line">	<span class="token property">margin-right</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line">	<span class="token property">margin-bottom</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,9);function M(P,R){const t=c("v-padding");return o(),i("div",null,[x,e(t,{padding:"left"},{first:p(()=>[f,y,_,b,w,v,j,F]),_:1}),C,e(t,{padding:"left"},{first:p(()=>[S,N,A,B,V,T,q,D,G]),_:1}),L])}const E=l(m,[["render",M],["__file","flexbox.html.vue"]]),I=JSON.parse('{"path":"/themes/learn/html/layout/flexbox.html","title":"Flexbox","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Информация","slug":"информация","link":"#информация","children":[]},{"level":3,"title":"Flex-контенер","slug":"flex-контенер","link":"#flex-контенер","children":[]},{"level":3,"title":"Flex-элемент","slug":"flex-элемент","link":"#flex-элемент","children":[]},{"level":3,"title":"Поведение margin","slug":"поведение-margin","link":"#поведение-margin","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/html/layout/flexbox.md"}');export{E as comp,I as data};
