import{_ as n,o as s,c as a,a as p}from"./app-DM3tM0M2.js";const t={},e=p(`<h1 id="циклы-для-перебора-массива" tabindex="-1"><a class="header-anchor" href="#циклы-для-перебора-массива"><span>Циклы для перебора массива</span></a></h1><h3 id="виды-циклов" tabindex="-1"><a class="header-anchor" href="#виды-циклов"><span>Виды циклов</span></a></h3><ul><li><code>forEach</code> - для перебора массива</li><li><code>filter</code> - для фильтрации массива</li><li><code>map</code> - для трансформации массива в массив</li><li><code>reduce / reduceRight</code> - для прохода по массиву с вычислением значения</li><li><code>every / some</code> - для проверки массива</li></ul><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach"><span><code>forEach</code></span></a></h3><ul><li><code>forEach</code> - выполняет указанную функцию один раз для каждого элемента в массиве</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Яблоко&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Апельсин&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Груша&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// =&gt; Яблоко   | 0 | Array(3)</span></span>
<span class="line"><span class="token comment">// =&gt; Апельсин | 1 | Array(3)</span></span>
<span class="line"><span class="token comment">// =&gt; Груша    | 2 | Array(3)</span></span>
<span class="line"></span></code></pre></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter"><span><code>filter</code></span></a></h3><ul><li><code>filter</code> - создаёт новый массив со всеми элементами, прошедшими проверку, задаваемую в передаваемой функции</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// Выбор положительных элементов массива</span></span>
<span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [1, 2, 3]</span></span>
<span class="line"></span></code></pre></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map"><span><code>map</code></span></a></h3><ul><li><code>map</code> - создаёт новый массив с результатом вызова указанной функции для каждого элемента массива</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> doubles <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [1, 2, 3]</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doubles<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [2, 4, 6]</span></span>
<span class="line"></span></code></pre></div><h3 id="reduce-reduceright" tabindex="-1"><a class="header-anchor" href="#reduce-reduceright"><span><code>reduce</code> / <code>reduceRight</code></span></a></h3><ul><li><code>reduce</code> - применяет функцию reducer к каждому элементу массива <u>слева-направо</u>, возвращая одно результирующее значение</li><li><code>reduceRight</code> - применяет функцию reducer к каждому элементу массива <u>справа-налево</u>, возвращая одно результирующее значение</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// Сумма элементов массива</span></span>
<span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Для каждого элемента массива запустить функцию,</span></span>
<span class="line"><span class="token comment">// промежуточный результат передавать первым аргументом далее</span></span>
<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span> current</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> sum <span class="token operator">+</span> current<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span></span>
<span class="line"></span></code></pre></div><h3 id="every-some" tabindex="-1"><a class="header-anchor" href="#every-some"><span><code>every</code> / <code>some</code></span></a></h3><ul><li><code>every</code> - проверяет, удовлетворяют ли <u>все</u> элементы массива условию, заданному в передаваемой функции</li><li><code>some</code> - проверяет, удовлетворяют ли <u>какие-нибудь</u> элементы массива условию, заданному в передаваемой функции</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">isPositive</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isPositive<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false, не все положительные</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>isPositive<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true, есть хоть одно положительное</span></span>
<span class="line"></span></code></pre></div>`,18),c=[e];function o(l,u){return s(),a("div",null,c)}const r=n(t,[["render",o],["__file","foreach.html.vue"]]),k=JSON.parse('{"path":"/themes/learn/js/advanced/foreach.html","title":"Циклы для перебора массива","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Виды циклов","slug":"виды-циклов","link":"#виды-циклов","children":[]},{"level":3,"title":"forEach","slug":"foreach","link":"#foreach","children":[]},{"level":3,"title":"filter","slug":"filter","link":"#filter","children":[]},{"level":3,"title":"map","slug":"map","link":"#map","children":[]},{"level":3,"title":"reduce / reduceRight","slug":"reduce-reduceright","link":"#reduce-reduceright","children":[]},{"level":3,"title":"every / some","slug":"every-some","link":"#every-some","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/js/advanced/foreach.md"}');export{r as comp,k as data};
