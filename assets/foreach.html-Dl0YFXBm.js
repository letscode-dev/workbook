import{_ as s,o as a,c as n,a as l}from"./app-DHIW3TM2.js";const e={},p=l(`<h1 id="циклы-для-перебора-массива" tabindex="-1"><a class="header-anchor" href="#циклы-для-перебора-массива"><span>Циклы для перебора массива</span></a></h1><h3 id="виды-циклов" tabindex="-1"><a class="header-anchor" href="#виды-циклов"><span>Виды циклов</span></a></h3><ul><li><code>forEach</code> - для перебора массива</li><li><code>filter</code> - для фильтрации массива</li><li><code>map</code> - для трансформации массива в массив</li><li><code>reduce / reduceRight</code> - для прохода по массиву с вычислением значения</li><li><code>every / some</code> - для проверки массива</li></ul><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach"><span><code>forEach</code></span></a></h3><ul><li><code>forEach</code> - выполняет указанную функцию один раз для каждого элемента в массиве</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> arr</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> [</span><span style="color:#50A14F;">&#39;Яблоко&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;Апельсин&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;Груша&#39;</span><span style="color:#383A42;">];</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">arr.</span><span style="color:#4078F2;">forEach</span><span style="color:#383A42;">((element, index, arr) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(element);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(index);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(arr);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// =&gt; Яблоко   | 0 | Array(3)</span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// =&gt; Апельсин | 1 | Array(3)</span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// =&gt; Груша    | 2 | Array(3)</span></span></span></code></pre></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter"><span><code>filter</code></span></a></h3><ul><li><code>filter</code> - создаёт новый массив со всеми элементами, прошедшими проверку, задаваемую в передаваемой функции</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Выбор положительных элементов массива</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> arr</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> [</span><span style="color:#986801;">1</span><span style="color:#383A42;">, </span><span style="color:#0184BC;">-</span><span style="color:#986801;">1</span><span style="color:#383A42;">, </span><span style="color:#986801;">2</span><span style="color:#383A42;">, </span><span style="color:#0184BC;">-</span><span style="color:#986801;">2</span><span style="color:#383A42;">, </span><span style="color:#986801;">3</span><span style="color:#383A42;">];</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> result</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> arr.</span><span style="color:#4078F2;">filter</span><span style="color:#383A42;">(number </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#383A42;"> number </span><span style="color:#0184BC;">&gt;</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(result); </span><span style="color:#A0A1A7;font-style:italic;">// =&gt; [1, 2, 3]</span></span></span></code></pre></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map"><span><code>map</code></span></a></h3><ul><li><code>map</code> - создаёт новый массив с результатом вызова указанной функции для каждого элемента массива</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> numbers</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> [</span><span style="color:#986801;">1</span><span style="color:#383A42;">, </span><span style="color:#986801;">2</span><span style="color:#383A42;">, </span><span style="color:#986801;">3</span><span style="color:#383A42;">];</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> doubles</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> numbers.</span><span style="color:#4078F2;">map</span><span style="color:#383A42;">((num) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#383A42;"> num </span><span style="color:#0184BC;">*</span><span style="color:#986801;"> 2</span><span style="color:#383A42;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(numbers); </span><span style="color:#A0A1A7;font-style:italic;">// =&gt; [1, 2, 3]</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(doubles); </span><span style="color:#A0A1A7;font-style:italic;">// =&gt; [2, 4, 6]</span></span></span></code></pre></div><h3 id="reduce-reduceright" tabindex="-1"><a class="header-anchor" href="#reduce-reduceright"><span><code>reduce</code> / <code>reduceRight</code></span></a></h3><ul><li><code>reduce</code> - применяет функцию reducer к каждому элементу массива <u>слева-направо</u>, возвращая одно результирующее значение</li><li><code>reduceRight</code> - применяет функцию reducer к каждому элементу массива <u>справа-налево</u>, возвращая одно результирующее значение</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Сумма элементов массива</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> arr</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> [</span><span style="color:#986801;">1</span><span style="color:#383A42;">, </span><span style="color:#986801;">2</span><span style="color:#383A42;">, </span><span style="color:#986801;">3</span><span style="color:#383A42;">, </span><span style="color:#986801;">4</span><span style="color:#383A42;">, </span><span style="color:#986801;">5</span><span style="color:#383A42;">];</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Для каждого элемента массива запустить функцию,</span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// промежуточный результат передавать первым аргументом далее</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> result</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> arr.</span><span style="color:#4078F2;">reduce</span><span style="color:#383A42;">((sum, current) </span><span style="color:#A626A4;">=&gt;</span><span style="color:#383A42;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">  return</span><span style="color:#383A42;"> sum </span><span style="color:#0184BC;">+</span><span style="color:#383A42;"> current;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">});</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">(result); </span><span style="color:#A0A1A7;font-style:italic;">// 15</span></span></span></code></pre></div><h3 id="every-some" tabindex="-1"><a class="header-anchor" href="#every-some"><span><code>every</code> / <code>some</code></span></a></h3><ul><li><code>every</code> - проверяет, удовлетворяют ли <u>все</u> элементы массива условию, заданному в передаваемой функции</li><li><code>some</code> - проверяет, удовлетворяют ли <u>какие-нибудь</u> элементы массива условию, заданному в передаваемой функции</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> arr</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> [</span><span style="color:#986801;">1</span><span style="color:#383A42;">, </span><span style="color:#0184BC;">-</span><span style="color:#986801;">1</span><span style="color:#383A42;">, </span><span style="color:#986801;">2</span><span style="color:#383A42;">, </span><span style="color:#0184BC;">-</span><span style="color:#986801;">2</span><span style="color:#383A42;">, </span><span style="color:#986801;">3</span><span style="color:#383A42;">];</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> isPositive</span><span style="color:#383A42;">(number) {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">  return</span><span style="color:#383A42;"> number </span><span style="color:#0184BC;">&gt;</span><span style="color:#986801;"> 0</span><span style="color:#383A42;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">( arr.</span><span style="color:#4078F2;">every</span><span style="color:#383A42;">(isPositive) ); </span><span style="color:#A0A1A7;font-style:italic;">// false, не все положительные</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">console.</span><span style="color:#4078F2;">log</span><span style="color:#383A42;">( arr.</span><span style="color:#4078F2;">some</span><span style="color:#383A42;">(isPositive) );  </span><span style="color:#A0A1A7;font-style:italic;">// true, есть хоть одно положительное</span></span></span></code></pre></div>`,18),o=[p];function c(t,r){return a(),n("div",null,o)}const y=s(e,[["render",c],["__file","foreach.html.vue"]]),A=JSON.parse('{"path":"/themes/learn/js/advanced/foreach.html","title":"Циклы для перебора массива","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Виды циклов","slug":"виды-циклов","link":"#виды-циклов","children":[]},{"level":3,"title":"forEach","slug":"foreach","link":"#foreach","children":[]},{"level":3,"title":"filter","slug":"filter","link":"#filter","children":[]},{"level":3,"title":"map","slug":"map","link":"#map","children":[]},{"level":3,"title":"reduce / reduceRight","slug":"reduce-reduceright","link":"#reduce-reduceright","children":[]},{"level":3,"title":"every / some","slug":"every-some","link":"#every-some","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/js/advanced/foreach.md"}');export{y as comp,A as data};
