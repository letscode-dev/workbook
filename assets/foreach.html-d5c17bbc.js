import{_ as t,o as p,c as o,f as s,a as n,b as a,e as x}from"./app-43701ee7.js";const e={},c=n("h1",{id:"циклы-для-перебора-массива",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#циклы-для-перебора-массива","aria-hidden":"true"},"#"),a(" Циклы для перебора массива")],-1),u=n("h3",{id:"виды-циклов",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#виды-циклов","aria-hidden":"true"},"#"),a(" Виды циклов")],-1),l=x("<ul><li><code>forEach</code> - для перебора массива</li><li><code>filter</code> - для фильтрации массива</li><li><code>map</code> - для трансформации массива в массив</li><li><code>reduce / reduceRight</code> - для прохода по массиву с вычислением значения</li><li><code>every / some</code> - для проверки массива</li></ul>",1),i=n("h3",{id:"foreach",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#foreach","aria-hidden":"true"},"#"),a(),n("code",null,"forEach")],-1),r=x(`<ul><li><code>forEach</code> - выполняет указанную функцию один раз для каждого элемента в массиве</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Яблоко&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Апельсин&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Груша&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// =&gt; Яблоко   | 0 | Array(3)</span>
<span class="token comment">// =&gt; Апельсин | 1 | Array(3)</span>
<span class="token comment">// =&gt; Груша    | 2 | Array(3)</span>
</code></pre></div>`,2),k=n("h3",{id:"filter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#filter","aria-hidden":"true"},"#"),a(),n("code",null,"filter")],-1),d=x(`<ul><li><code>filter</code> - создаёт новый массив со всеми элементами, прошедшими проверку, задаваемую в передаваемой функции</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Выбор положительных элементов массива</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [1, 2, 3]</span>
</code></pre></div>`,2),m=n("h3",{id:"map",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#map","aria-hidden":"true"},"#"),a(),n("code",null,"map")],-1),h=x(`<ul><li><code>map</code> - создаёт новый массив с результатом вызова указанной функции для каждого элемента массива</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> doubles <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [1, 2, 3]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doubles<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [2, 4, 6]</span>
</code></pre></div>`,2),g=n("h3",{id:"reduce-reduceright",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reduce-reduceright","aria-hidden":"true"},"#"),a(),n("code",null,"reduce"),a(" / "),n("code",null,"reduceRight")],-1),f=x(`<ul><li><code>reduce</code> - применяет функцию reducer к каждому элементу массива <u>слева-направо</u>, возвращая одно результирующее значение</li><li><code>reduceRight</code> - применяет функцию reducer к каждому элементу массива <u>справа-налево</u>, возвращая одно результирующее значение</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Сумма элементов массива</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Для каждого элемента массива запустить функцию,</span>
<span class="token comment">// промежуточный результат передавать первым аргументом далее</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">sum<span class="token punctuation">,</span> current</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> sum <span class="token operator">+</span> current<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span>
</code></pre></div>`,2),b=n("h3",{id:"every-some",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#every-some","aria-hidden":"true"},"#"),a(),n("code",null,"every"),a(" / "),n("code",null,"some")],-1),_=x(`<ul><li><code>every</code> - проверяет, удовлетворяют ли <u>все</u> элементы массива условию, заданному в передаваемой функции</li><li><code>some</code> - проверяет, удовлетворяют ли <u>какие-нибудь</u> элементы массива условию, заданному в передаваемой функции</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">isPositive</span><span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isPositive<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false, не все положительные</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span>isPositive<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true, есть хоть одно положительное</span>
</code></pre></div>`,2);function v(y,j){return p(),o("div",null,[c,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),u,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),l,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),i,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),r,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),k,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),d,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),m,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),h,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),g,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),f,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),b,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),_])}const E=t(e,[["render",v],["__file","foreach.html.vue"]]);export{E as default};
