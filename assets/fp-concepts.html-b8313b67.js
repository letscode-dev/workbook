import{_ as x,r as e,o as u,c as l,f as a,d as c,w as t,a as n,b as s,e as o}from"./app-9e24aef3.js";const i={},k=n("h1",{id:"концепции-функционального-программирования",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#концепции-функционального-программирования","aria-hidden":"true"},"#"),s(" Концепции функционального программирования")],-1),r=n("h3",{id:"чистые-функции",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#чистые-функции","aria-hidden":"true"},"#"),s(" Чистые функции")],-1),d=n("ul",null,[n("li",null,[n("code",null,"Чистые функции"),s(" (pure functions) - возвращает один и тот же результат для одинаковых входных данных")])],-1),m=n("div",{class:"language-javascript","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// Чистая функция"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"sum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	rerturn a `),n("span",{class:"token operator"},"+"),s(" b"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),f=n("div",{class:"language-javascript","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// Обычная функция"),s(`
`),n("span",{class:"token keyword"},"let"),s(" current "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"77"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"sum"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("a"),n("span",{class:"token punctuation"},","),s(" b")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	rerturn a `),n("span",{class:"token operator"},"+"),s(" b "),n("span",{class:"token operator"},"+"),s(" current"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])])],-1),h=n("h3",{id:"функции-первого-класса",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#функции-первого-класса","aria-hidden":"true"},"#"),s(" Функции первого класса")],-1),g=o(`<ul><li><code>Функции первого класса</code> - функция трактуются как объект, то есть может быть передана другим функциям и ее можно вернуть из функций. Так же ее можно присваивать переменным</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Передача функции в качестве аргумента</span>
<span class="token keyword">function</span> <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">functionInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">functionInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span>getInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Возврат функции из функции</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">functionInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Присвоение функции в переменную</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),_=n("h3",{id:"иммутабельность",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#иммутабельность","aria-hidden":"true"},"#"),s(" Иммутабельность")],-1),v=n("ul",null,[n("li",null,[n("code",null,"Иммутабельность"),s(" - свойство объектов не изменяться (н-р строка. строку нельзя поменять на месте, для изменения нужно создать новую строку). Применяется для списков, словарей и т.д. Иммутабельный список - список в который нельзя добавить / удалить элемент, можно только итерироваться по ним. Можно создать новый список который содежит все элементы +1, при этом старый остается валадным")])],-1),b=n("h5",{id:"иммутабельно",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#иммутабельно","aria-hidden":"true"},"#"),s(" Иммутабельно")],-1),w=n("ul",null,[n("li",null,[n("code",null,"map"),s(" - создаёт новый массив с результатом вызова указанной функции для каждого элемента массива")])],-1),y=n("div",{class:"language-javascript","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" numbers "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" doubles "),n("span",{class:"token operator"},"="),s(" numbers"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(" num "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("numbers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// => [1, 2, 3]"),s(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("doubles"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// => [2, 4, 6]"),s(`
`)])])],-1),j=n("h5",{id:"не-иммутабельно",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#не-иммутабельно","aria-hidden":"true"},"#"),s(" Не иммутабельно")],-1),N=n("ul",null,[n("li",null,[n("code",null,"push"),s(", "),n("code",null,"unshift"),s(", "),n("code",null,"pop"),s(", "),n("code",null,"shift"),s(" изменяют существующий массив")])],-1),T=n("div",{class:"language-javascript","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" arr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'Tony'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Kate'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// Добавление нового элемента в конец массива"),s(`
arr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"push"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Jack'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// Добавление нового элемента в начало массива"),s(`
arr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unshift"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Jack'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// Удаление элемента из конца массива"),s(`
arr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pop"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// Удаление элемента из начала массива"),s(`
arr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"shift"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])])],-1),I=n("h3",{id:"каррирование-функции",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#каррирование-функции","aria-hidden":"true"},"#"),s(" Каррирование функций")],-1),V=o(`<ul><li><code>Каррирование функций</code> - все функции могут быть от одного аргумента. Преобразование функции от пары аргументов в функцию, берущую свои аргументы по одному</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> a <span class="token operator">*</span> b <span class="token operator">*</span> c
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>

<span class="token comment">//const mul1 = multiply(1);</span>
<span class="token comment">//const mul2 = mul1(2);</span>
<span class="token comment">//const result = mul2(3);</span>
<span class="token comment">//log(result); // 6</span>
</code></pre></div>`,2),C=n("h3",{id:"рекурсия",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#рекурсия","aria-hidden":"true"},"#"),s(" Рекурсия")],-1),B=o(`<ul><li><code>Рекурсия</code> - рекурсивные функции вызывают сами себя, позволяя операции выполняться снова и снова</li></ul><h5 id="пример-возведения-в-степень-через-рекурсию" tabindex="-1"><a class="header-anchor" href="#пример-возведения-в-степень-через-рекурсию" aria-hidden="true">#</a> Пример возведения в степень через рекурсию</h5><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pow</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// пока n != 1, сводить вычисление pow(x,n) к pow(x,n-1)</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> x <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> x<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
</code></pre></div>`,3);function E(H,S){const p=e("v-two");return u(),l("div",null,[k,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),r,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),d,a(" .............. START ......................... "),c(p,null,{first:t(()=>[m]),last:t(()=>[f]),_:1}),a(" ............... END .......................... "),a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),h,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),g,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),_,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),v,a(" .............. START ......................... "),c(p,null,{first:t(()=>[b,w,y]),last:t(()=>[j,N,T]),_:1}),a(" ............... END .......................... "),a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),I,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),V,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),C,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),B])}const D=x(i,[["render",E],["__file","fp-concepts.html.vue"]]);export{D as default};
