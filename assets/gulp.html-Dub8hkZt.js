import{_ as s,o as a,c as n,a as l}from"./app-6QxJeDfs.js";const p={},o=l(`<h1 id="gulp" tabindex="-1"><a class="header-anchor" href="#gulp"><span>Gulp</span></a></h1><ul><li><a href="https://gulpjs.com/docs/en/getting-started/quick-start" target="_blank" rel="noopener noreferrer">Gulp: Get Started</a></li><li><a href="https://webdesign-master.ru/blog/tools/gulp-4-lesson.html" target="_blank" rel="noopener noreferrer">Подробное руководство на русском языке</a></li></ul><h3 id="описание" tabindex="-1"><a class="header-anchor" href="#описание"><span>Описание</span></a></h3><p><code>Gulp</code> – это инструмент для автоматизации рутинных задач в веб-разработке и других сферах.</p><p><strong>Основные задачи:</strong></p><ul><li>Объединение кода из разных файлов в один</li><li>Минификация и выравнивание кода</li><li>Сжатие изображений</li><li>Live Server</li><li>Работа с CSS препроцессорами (<code>sass</code>, <code>less</code>)</li></ul><h3 id="установка" tabindex="-1"><a class="header-anchor" href="#установка"><span>Установка</span></a></h3><ul><li>Установить Gulp можно с помощью NPM</li><li>Сначала необходимо установить Gulp глобально на компьютер с помощью команды</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-bash;"><code><span class="line"><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> i</span><span style="color:#986801;"> --g</span><span style="color:#50A14F;"> gulp</span></span></span></code></pre></div><ul><li>Для дальнейшей работы в директории с проектом необходимо проинициализировать проект командой</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-bash;"><code><span class="line"><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> init</span></span></span></code></pre></div><ul><li>Затем в директории проекта необходимо установить Gulp в проект с помощью команды</li></ul><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-bash;"><code><span class="line"><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> i</span><span style="color:#986801;"> --save-dev</span><span style="color:#50A14F;"> gulp</span></span></span></code></pre></div><ul><li>Теперь можно приступить к настройке работы Gulp.</li></ul><h3 id="работа-с-gulp" tabindex="-1"><a class="header-anchor" href="#работа-с-gulp"><span>Работа с Gulp</span></a></h3><p><strong>Чтобы начать работу необходимо создать:</strong></p><ul><li>Текстовый файл gulpfile.js. Непосредственно в нём будем писать код для работы gulp.</li><li>Папку App. В этой папке будут находиться рабочие файлы проекта.</li><li>Папку Build. Gulp обработает проект в папке App и сложит итоговые файлы в эту папку.</li></ul><hr><ul><li>Gulp это таск-менеджер</li><li>В <code>gulpfile.js</code> необходимо создать функцию (Таск) и Gulp выполняет её.Но сам по себе Gulp ограничен в своих действиях. Чтобы научить его выполнять такие задачи как минификация или сжатие изображений, нужно установить с помощью npm дополнительные плагины.</li></ul><p><strong>Примеры плагинов</strong></p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-bash;"><code><span class="line"><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> i</span><span style="color:#50A14F;"> gulp-concat</span><span style="color:#986801;"> --save-dev</span><span style="color:#A0A1A7;font-style:italic;">    # объединение CSS</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> i</span><span style="color:#50A14F;"> gulp-uglify-es</span><span style="color:#986801;"> --save-dev</span><span style="color:#A0A1A7;font-style:italic;"> # минификация JavaScript</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">npm</span><span style="color:#50A14F;"> i</span><span style="color:#50A14F;"> browser-sync</span><span style="color:#986801;"> --save-dev</span><span style="color:#A0A1A7;font-style:italic;">   # Live Server</span></span></span></code></pre></div><ul><li>Помимо этих плагинов есть множество других под любые задачи.</li><li>Подробнее о возможностях и работе с плагинами можно прочитать в документации.</li><li>Плюсом является то, что настраивать работу Gulp, писать код в <code>gulpfile.js</code> нужно всего лишь раз. Затем gulpfile.js можно использовать в другом проекте.</li></ul><h3 id="пример-gulpfile-js" tabindex="-1"><a class="header-anchor" href="#пример-gulpfile-js"><span>Пример <code>gulpfile.js</code></span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Определяем переменную &quot;preprocessor&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">let</span><span style="color:#383A42;"> preprocessor </span><span style="color:#0184BC;">=</span><span style="color:#50A14F;"> &#39;sass&#39;</span><span style="color:#383A42;">; </span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Определяем константы Gulp</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#383A42;"> { </span><span style="color:#986801;">src</span><span style="color:#383A42;">, </span><span style="color:#986801;">dest</span><span style="color:#383A42;">, </span><span style="color:#986801;">parallel</span><span style="color:#383A42;">, </span><span style="color:#986801;">series</span><span style="color:#383A42;">, </span><span style="color:#986801;">watch</span><span style="color:#383A42;"> } </span><span style="color:#0184BC;">=</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем Browsersync</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> browserSync</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;browser-sync&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">create</span><span style="color:#383A42;">();</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем gulp-concat</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> concat</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-concat&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем gulp-uglify-es</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> uglify</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-uglify-es&#39;</span><span style="color:#383A42;">).</span><span style="color:#E45649;">default</span><span style="color:#383A42;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем модули gulp-sass и gulp-less</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> sass</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-sass&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> less</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-less&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем Autoprefixer</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> autoprefixer</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-autoprefixer&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем модуль gulp-clean-css</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> cleancss</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-clean-css&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем gulp-imagemin для работы с изображениями</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> imagemin</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-imagemin&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем модуль gulp-newer</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> newer</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;gulp-newer&#39;</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Подключаем модуль del</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">const</span><span style="color:#986801;"> del</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> require</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;del&#39;</span><span style="color:#383A42;">);</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Определяем логику работы Browsersync</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> browsersync</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	browserSync.</span><span style="color:#4078F2;">init</span><span style="color:#383A42;">({ </span><span style="color:#A0A1A7;font-style:italic;">// Инициализация Browsersync</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">		server</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> { </span><span style="color:#E45649;">baseDir</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;app/&#39;</span><span style="color:#383A42;"> }, </span><span style="color:#A0A1A7;font-style:italic;">// Указываем папку сервера</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">		notify</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> false</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">// Отключаем уведомления</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">		online</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#A0A1A7;font-style:italic;"> // Режим работы: true или false</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	})</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> scripts</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#4078F2;"> src</span><span style="color:#383A42;">([ </span><span style="color:#A0A1A7;font-style:italic;">// Берём файлы из источников</span></span></span>
<span class="line"><span class="line"><span style="color:#50A14F;">		&#39;node_modules/jquery/dist/jquery.min.js&#39;</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">// Пример подключения библиотеки</span></span></span>
<span class="line"><span class="line"><span style="color:#50A14F;">		&#39;app/js/app.js&#39;</span><span style="color:#383A42;">, </span><span style="color:#A0A1A7;font-style:italic;">// Пользовательские скрипты, использующие библиотеку, должны быть подключены в конце</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		])</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">			.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">concat</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app.min.js&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Конкатенируем в один файл</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">			.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">uglify</span><span style="color:#383A42;">()) </span><span style="color:#A0A1A7;font-style:italic;">// Сжимаем JavaScript</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">			.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">dest</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/js/&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Выгружаем готовый файл в папку назначения</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">			.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(browserSync.</span><span style="color:#4078F2;">stream</span><span style="color:#383A42;">()) </span><span style="color:#A0A1A7;font-style:italic;">// Триггерим Browsersync для обновления страницы</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> styles</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#4078F2;"> src</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/&#39;</span><span style="color:#0184BC;"> +</span><span style="color:#383A42;"> preprocessor </span><span style="color:#0184BC;">+</span><span style="color:#50A14F;"> &#39;/main.&#39;</span><span style="color:#0184BC;"> +</span><span style="color:#383A42;"> preprocessor </span><span style="color:#0184BC;">+</span><span style="color:#50A14F;"> &#39;&#39;</span><span style="color:#383A42;">) </span><span style="color:#A0A1A7;font-style:italic;">// Выбираем источник: &quot;app/sass/main.sass&quot; или &quot;app/less/main.less&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">eval</span><span style="color:#383A42;">(preprocessor)()) </span><span style="color:#A0A1A7;font-style:italic;">// Преобразуем значение переменной &quot;preprocessor&quot; в функцию</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">concat</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app.min.css&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Конкатенируем в файл app.min.js</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">autoprefixer</span><span style="color:#383A42;">({ </span><span style="color:#E45649;">overrideBrowserslist</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> [</span><span style="color:#50A14F;">&#39;last 10 versions&#39;</span><span style="color:#383A42;">], </span><span style="color:#E45649;">grid</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;"> })) </span><span style="color:#A0A1A7;font-style:italic;">// Создадим префиксы с помощью Autoprefixer</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">cleancss</span><span style="color:#383A42;">( { </span><span style="color:#E45649;">level</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> { </span><span style="color:#986801;">1</span><span style="color:#0184BC;">:</span><span style="color:#383A42;"> { </span><span style="color:#E45649;">specialComments</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> 0</span><span style="color:#383A42;"> } }</span><span style="color:#A0A1A7;font-style:italic;">/* , format: &#39;beautify&#39; */</span><span style="color:#383A42;"> } )) </span><span style="color:#A0A1A7;font-style:italic;">// Минифицируем стили</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">dest</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/css/&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Выгрузим результат в папку &quot;app/css/&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(browserSync.</span><span style="color:#4078F2;">stream</span><span style="color:#383A42;">()) </span><span style="color:#A0A1A7;font-style:italic;">// Сделаем инъекцию в браузер</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> images</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#4078F2;"> src</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/images/src/**/*&#39;</span><span style="color:#383A42;">) </span><span style="color:#A0A1A7;font-style:italic;">// Берём все изображения из папки источника</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">newer</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/images/dest/&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Проверяем, было ли изменено (сжато) изображение ранее</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">imagemin</span><span style="color:#383A42;">()) </span><span style="color:#A0A1A7;font-style:italic;">// Сжимаем и оптимизируем изображеня</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">dest</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/images/dest/&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Выгружаем оптимизированные изображения в папку назначения</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> cleanimg</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#4078F2;"> del</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/images/dest/**/*&#39;</span><span style="color:#383A42;">, { </span><span style="color:#E45649;">force</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;"> }) </span><span style="color:#A0A1A7;font-style:italic;">// Удаляем всё содержимое папки &quot;app/images/dest/&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> buildcopy</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#4078F2;"> src</span><span style="color:#383A42;">([ </span><span style="color:#A0A1A7;font-style:italic;">// Выбираем нужные файлы</span></span></span>
<span class="line"><span class="line"><span style="color:#50A14F;">		&#39;app/css/**/*.min.css&#39;</span><span style="color:#383A42;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#50A14F;">		&#39;app/js/**/*.min.js&#39;</span><span style="color:#383A42;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#50A14F;">		&#39;app/images/dest/**/*&#39;</span><span style="color:#383A42;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#50A14F;">		&#39;app/**/*.html&#39;</span><span style="color:#383A42;">,</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">		], { </span><span style="color:#E45649;">base</span><span style="color:#0184BC;">:</span><span style="color:#50A14F;"> &#39;app&#39;</span><span style="color:#383A42;"> }) </span><span style="color:#A0A1A7;font-style:italic;">// Параметр &quot;base&quot; сохраняет структуру проекта при копировании</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	.</span><span style="color:#4078F2;">pipe</span><span style="color:#383A42;">(</span><span style="color:#4078F2;">dest</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;dist&#39;</span><span style="color:#383A42;">)) </span><span style="color:#A0A1A7;font-style:italic;">// Выгружаем в папку с финальной сборкой</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> cleandist</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A626A4;">	return</span><span style="color:#4078F2;"> del</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;dist/**/*&#39;</span><span style="color:#383A42;">, { </span><span style="color:#E45649;">force</span><span style="color:#0184BC;">:</span><span style="color:#986801;"> true</span><span style="color:#383A42;"> }) </span><span style="color:#A0A1A7;font-style:italic;">// Удаляем всё содержимое папки &quot;dist/&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A626A4;">function</span><span style="color:#4078F2;"> startwatch</span><span style="color:#383A42;">() {</span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">	// Выбираем все файлы JS в проекте, а затем исключим с суффиксом .min.js</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">	watch</span><span style="color:#383A42;">([</span><span style="color:#50A14F;">&#39;app/**/*.js&#39;</span><span style="color:#383A42;">, </span><span style="color:#50A14F;">&#39;!app/**/*.min.js&#39;</span><span style="color:#383A42;">], scripts);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">	</span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">	// Мониторим файлы препроцессора на изменения</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">	watch</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/**/&#39;</span><span style="color:#0184BC;"> +</span><span style="color:#383A42;"> preprocessor </span><span style="color:#0184BC;">+</span><span style="color:#50A14F;"> &#39;/**/*&#39;</span><span style="color:#383A42;">, styles);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">	// Мониторим файлы HTML на изменения</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">	watch</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/**/*.html&#39;</span><span style="color:#383A42;">).</span><span style="color:#4078F2;">on</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;change&#39;</span><span style="color:#383A42;">, browserSync.</span><span style="color:#E45649;">reload</span><span style="color:#383A42;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">	// Мониторим папку-источник изображений и выполняем images(), если есть изменения</span></span></span>
<span class="line"><span class="line"><span style="color:#4078F2;">	watch</span><span style="color:#383A42;">(</span><span style="color:#50A14F;">&#39;app/images/src/**/*&#39;</span><span style="color:#383A42;">, images);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;">}</span></span></span></code></pre></div><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="shiki one-light vp-code" style="background-color:#FAFAFA;color:#383A42 language-javascript;"><code><span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Экспортируем функцию browsersync() как таск browsersync. Значение после знака = это имеющаяся функция.</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">browsersync</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> browsersync;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Экспортируем функцию scripts() в таск scripts</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">scripts</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> scripts;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Экспортируем функцию styles() в таск styles</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">styles</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> styles;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Экспорт функции images() в таск images</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">images</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> images;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Экспортируем функцию cleanimg() как таск cleanimg</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">cleanimg</span><span style="color:#0184BC;"> =</span><span style="color:#383A42;"> cleanimg;</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Создаём новый таск &quot;build&quot;, который последовательно выполняет нужные операции</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">build</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> series</span><span style="color:#383A42;">(cleandist, styles, scripts, images, buildcopy);</span></span></span>
<span class="line"><span class="line"><span style="color:#383A42;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#A0A1A7;font-style:italic;">// Экспортируем дефолтный таск с нужным набором функций</span></span></span>
<span class="line"><span class="line"><span style="color:#E45649;">exports</span><span style="color:#383A42;">.</span><span style="color:#E45649;">default</span><span style="color:#0184BC;"> =</span><span style="color:#4078F2;"> parallel</span><span style="color:#383A42;">(styles, scripts, browsersync, startwatch);</span></span></span></code></pre></div>`,33),e=[o];function t(c,r){return a(),n("div",null,e)}const y=s(p,[["render",t],["__file","gulp.html.vue"]]),A=JSON.parse('{"path":"/themes/learn/js/bundlers/gulp.html","title":"Gulp","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Описание","slug":"описание","link":"#описание","children":[]},{"level":3,"title":"Установка","slug":"установка","link":"#установка","children":[]},{"level":3,"title":"Работа с Gulp","slug":"работа-с-gulp","link":"#работа-с-gulp","children":[]},{"level":3,"title":"Пример gulpfile.js","slug":"пример-gulpfile-js","link":"#пример-gulpfile-js","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/js/bundlers/gulp.md"}');export{y as comp,A as data};
