import{_ as t,o as p,c as o,f as a,a as n,b as s,e as x}from"./app-43701ee7.js";const e={},c=n("h1",{id:"числа-метода-работы-с-числами",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#числа-метода-работы-с-числами","aria-hidden":"true"},"#"),s(" Числа. Метода работы с числами")],-1),u=n("h3",{id:"методы",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#методы","aria-hidden":"true"},"#"),s(" Методы")],-1),l=x(`<h3 id="isnan-number-parseint-parsefloat" tabindex="-1"><a class="header-anchor" href="#isnan-number-parseint-parsefloat" aria-hidden="true">#</a> <code>isNaN</code> <code>Number</code> <code>parseInt</code> <code>parseFloat</code></h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">isNaN</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// Если в переменной не число, вернет true</span>
<span class="token function">Number</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// Преобразование любого объекта в число</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Преобразование в целое число</span>
<span class="token function">parseFloat</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Преобразование в целое/дробное число</span>
</code></pre></div>`,2),i=n("h3",{id:"math",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#math","aria-hidden":"true"},"#"),s(" Math")],-1),k=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Округляет число к ближайшему целому</span>
Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Округляет число в большую сторону</span>
Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Округляет число в меньшую сторону</span>

<span class="token keyword">const</span> rand <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Генерация случайного числа в диапазоне от 0 до 1</span>
<span class="token keyword">const</span> rand <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// От 0 до 100</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Степень 4 в 2</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Квадратный корень числа</span>
</code></pre></div>`,1),r=n("h3",{id:"остаток-от-деления",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#остаток-от-деления","aria-hidden":"true"},"#"),s(" Остаток от деления")],-1),d=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, остаток от деления 5 на 2</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2, остаток от деления 8 на 3</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0, остаток от деления 6 на 3</span>
</code></pre></div>`,1);function m(h,f){return p(),o("div",null,[c,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),u,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),l,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),i,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),k,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),r,a(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),d])}const b=t(e,[["render",m],["__file","number.html.vue"]]);export{b as default};
