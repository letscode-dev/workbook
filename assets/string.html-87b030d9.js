import{_ as e,o,c as p,f as n,a,b as s,e as t}from"./app-9e24aef3.js";const x={},c=a("h1",{id:"строки-методы-работы-со-строками",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#строки-методы-работы-со-строками","aria-hidden":"true"},"#"),s(" Строки. Методы работы со строками")],-1),l=a("h3",{id:"перебор-строки",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#перебор-строки","aria-hidden":"true"},"#"),s(" Перебор строки")],-1),r=t(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> str<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,1),i=a("h3",{id:"методы",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#методы","aria-hidden":"true"},"#"),s(" Методы")],-1),u=t(`<h3 id="length-tostring" tabindex="-1"><a class="header-anchor" href="#length-tostring" aria-hidden="true">#</a> <code>length</code> <code>toString</code></h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// Длина строки </span>
<span class="token number">77.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Преобразование в строку</span>
</code></pre></div><h3 id="touppercase-tolowercase" tabindex="-1"><a class="header-anchor" href="#touppercase-tolowercase" aria-hidden="true">#</a> <code>toUpperCase</code> <code>toLowerCase</code></h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Верхний регистр</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Нижний регистр</span>
</code></pre></div><h3 id="indexof-lastindexof" tabindex="-1"><a class="header-anchor" href="#indexof-lastindexof" aria-hidden="true">#</a> <code>indexOf</code> <code>lastIndexOf</code></h3><ul><li>Поиск в строке совпадений с образцом</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pos <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// С начала (-1 не найдено)</span>
<span class="token keyword">const</span> pos <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// С конца (-1 не найдено)</span>
</code></pre></div><h3 id="slice" tabindex="-1"><a class="header-anchor" href="#slice" aria-hidden="true">#</a> <code>slice</code></h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Вырезать с 0 до 7 не включая</span>
</code></pre></div>`,9);function d(k,h){return o(),p("div",null,[c,n(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),l,n(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),r,n(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),i,n(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),u])}const m=e(x,[["render",d],["__file","string.html.vue"]]);export{m as default};
