import{_ as s,o as n,c as a,b as t}from"./app-CmK3LxqM.js";const e={},p=t(`<h1 id="строки-методы-работы-со-строками" tabindex="-1"><a class="header-anchor" href="#строки-методы-работы-со-строками"><span>Строки. Методы работы со строками</span></a></h1><h3 id="перебор-строки" tabindex="-1"><a class="header-anchor" href="#перебор-строки"><span>Перебор строки</span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> str<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="методы" tabindex="-1"><a class="header-anchor" href="#методы"><span>Методы</span></a></h3><h3 id="length-tostring" tabindex="-1"><a class="header-anchor" href="#length-tostring"><span><code>length</code> <code>toString</code></span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> a <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// Длина строки </span></span>
<span class="line"><span class="token number">77.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Преобразование в строку</span></span>
<span class="line"></span></code></pre></div><h3 id="touppercase-tolowercase" tabindex="-1"><a class="header-anchor" href="#touppercase-tolowercase"><span><code>toUpperCase</code> <code>toLowerCase</code></span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Верхний регистр</span></span>
<span class="line"><span class="token keyword">const</span> name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Нижний регистр</span></span>
<span class="line"></span></code></pre></div><h3 id="indexof-lastindexof" tabindex="-1"><a class="header-anchor" href="#indexof-lastindexof"><span><code>indexOf</code> <code>lastIndexOf</code></span></a></h3><ul><li>Поиск в строке совпадений с образцом</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> pos <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// С начала (-1 не найдено)</span></span>
<span class="line"><span class="token keyword">const</span> pos <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// С конца (-1 не найдено)</span></span>
<span class="line"></span></code></pre></div><h3 id="slice" tabindex="-1"><a class="header-anchor" href="#slice"><span><code>slice</code></span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> root <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Вырезать с 0 до 7 не включая</span></span>
<span class="line"></span></code></pre></div>`,13),o=[p];function c(l,i){return n(),a("div",null,o)}const u=s(e,[["render",c],["__file","string.html.vue"]]),d=JSON.parse('{"path":"/themes/learn/js/advanced/string.html","title":"Строки. Методы работы со строками","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Перебор строки","slug":"перебор-строки","link":"#перебор-строки","children":[]},{"level":3,"title":"Методы","slug":"методы","link":"#методы","children":[]},{"level":3,"title":"length toString","slug":"length-tostring","link":"#length-tostring","children":[]},{"level":3,"title":"toUpperCase toLowerCase","slug":"touppercase-tolowercase","link":"#touppercase-tolowercase","children":[]},{"level":3,"title":"indexOf lastIndexOf","slug":"indexof-lastindexof","link":"#indexof-lastindexof","children":[]},{"level":3,"title":"slice","slug":"slice","link":"#slice","children":[]}],"git":{"updatedTime":1720968190000,"contributors":[{"name":"Anton","email":"45148047+anton-sergeenkov@users.noreply.github.com","commits":1}]},"filePathRelative":"themes/learn/js/advanced/string.md"}');export{u as comp,d as data};
