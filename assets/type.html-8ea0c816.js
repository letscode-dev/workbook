import{_ as t,r as o,o as c,c as p,f as s,a,b as n,d as r,e as x}from"./app-2fd37137.js";const l={},d=a("h1",{id:"типы-данных-переменные-и-константы",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#типы-данных-переменные-и-константы","aria-hidden":"true"},"#"),n(" Типы данных. Переменные и константы")],-1),i=a("h3",{id:"типы-данных",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#типы-данных","aria-hidden":"true"},"#"),n(" Типы данных")],-1),k=x('<h5 id="примитивные" tabindex="-1"><a class="header-anchor" href="#примитивные" aria-hidden="true">#</a> Примитивные</h5><ol><li><code>Number</code> - число 64-битный float</li><li><code>String</code> - cтрока</li><li><code>Boolean</code> - булевый, логический</li><li><code>null</code> - специальное пустое или неизвестное значение (присваивается самостоятельно)</li><li><code>undefined</code> - специальное неприсвоеное значение (возвращается из js)</li><li><code>Symbol</code> - символ ES6</li><li><code>BigInt</code> - целые числа больше 2<sup>53</sup> BigInt (значение)</li></ol><h5 id="объекты" tabindex="-1"><a class="header-anchor" href="#объекты" aria-hidden="true">#</a> Объекты</h5><ol start="8"><li><code>Object</code> - объект</li></ol>',4),u=a("h3",{id:"переменные-и-константы",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#переменные-и-константы","aria-hidden":"true"},"#"),n(" Переменные и константы")],-1),h=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">&#39;Это переменная, ее можно менять&#39;</span><span class="token punctuation">;</span> 
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token string">&#39;Это константа, ее нельзя менять&#39;</span><span class="token punctuation">;</span> 
</code></pre></div>`,1),_=a("h3",{id:"примеры",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#примеры","aria-hidden":"true"},"#"),n(" Примеры")],-1),m=a("h4",{id:"типы-данных-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#типы-данных-1","aria-hidden":"true"},"#"),n(" Типы данных")],-1),g=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token string">&#39;Это строка&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Строка</span>
<span class="token keyword">const</span> int    <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>           <span class="token comment">// Целое число</span>
<span class="token keyword">const</span> float  <span class="token operator">=</span> <span class="token number">0.25</span><span class="token punctuation">;</span>         <span class="token comment">// Дробное число</span>
<span class="token keyword">const</span> bool   <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>         <span class="token comment">// Логическое значение (только true или false)</span>
</code></pre></div>`,1),b=a("h4",{id:"сложение-чисел",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#сложение-чисел","aria-hidden":"true"},"#"),n(" Сложение чисел")],-1),f=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// Результат: 30</span>
</code></pre></div>`,1),v=a("h4",{id:"соединение-строк",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#соединение-строк","aria-hidden":"true"},"#"),n(" Соединение строк")],-1),y=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token string">&#39;Привет &#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token string">&#39;мир&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// Результат: &#39;Привет мир&#39;</span>
</code></pre></div>`,1),j=a("h4",{id:"изменение-значении-переменных",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#изменение-значении-переменных","aria-hidden":"true"},"#"),n(" Изменение значений переменных")],-1),w=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>
count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">;</span> <span class="token comment">// 1 вариант</span>
count <span class="token operator">+=</span> <span class="token number">16</span><span class="token punctuation">;</span>        <span class="token comment">// 2 вариант</span>
</code></pre></div>`,1),q=a("h3",{id:"typeof-возвращает-тип-аргумента",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#typeof-возвращает-тип-аргумента","aria-hidden":"true"},"#"),n(),a("code",null,"typeof"),n(" - возвращает тип аргумента")],-1),B=x(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">typeof</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token comment">// &quot;number&quot;</span>
<span class="token keyword">typeof</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;boolean&quot;</span>
<span class="token keyword">typeof</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;string&quot;</span>
</code></pre></div>`,1),N={href:"https://learn.javascript.ru/let-const",target:"_blank",rel:"noopener noreferrer"};function V(E,I){const e=o("ExternalLinkIcon");return c(),p("div",null,[d,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),i,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),k,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),u,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),h,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),_,s(" xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "),s("---------------------------------------------------------"),m,s("---------------------------------------------------------"),g,s("---------------------------------------------------------"),b,s("---------------------------------------------------------"),f,s("---------------------------------------------------------"),v,s("---------------------------------------------------------"),y,s("---------------------------------------------------------"),j,s("---------------------------------------------------------"),w,s("---------------------------------------------------------"),q,s("---------------------------------------------------------"),B,a("p",null,[a("a",N,[n("Переменные: let и const"),r(e)])])])}const C=t(l,[["render",V],["__file","type.html.vue"]]);export{C as default};
